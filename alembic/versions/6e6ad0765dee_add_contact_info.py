"""Add contact info

Revision ID: 6e6ad0765dee
Revises: 17b490e59bf2
Create Date: 2023-08-09 21:39:35.707735

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6e6ad0765dee'
down_revision: Union[str, None] = '17b490e59bf2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'appointments', ['id'], schema='public')
    op.create_unique_constraint(None, 'insurances', ['id'], schema='public')
    op.drop_constraint('insurances_patient_id_fkey', 'insurances', type_='foreignkey')
    op.create_foreign_key(None, 'insurances', 'patients', ['patient_id'], ['id'], source_schema='public', referent_schema='public')
    op.create_unique_constraint(None, 'patients', ['id'], schema='public')
    op.create_unique_constraint(None, 'referrals', ['id'], schema='public')
    op.drop_constraint('referrals_patient_id_fkey', 'referrals', type_='foreignkey')
    op.create_foreign_key(None, 'referrals', 'patients', ['patient_id'], ['id'], source_schema='public', referent_schema='public')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'referrals', schema='public', type_='foreignkey')
    op.create_foreign_key('referrals_patient_id_fkey', 'referrals', 'patients', ['patient_id'], ['id'])
    op.drop_constraint(None, 'referrals', schema='public', type_='unique')
    op.drop_constraint(None, 'patients', schema='public', type_='unique')
    op.drop_constraint(None, 'insurances', schema='public', type_='foreignkey')
    op.create_foreign_key('insurances_patient_id_fkey', 'insurances', 'patients', ['patient_id'], ['id'])
    op.drop_constraint(None, 'insurances', schema='public', type_='unique')
    op.drop_constraint(None, 'appointments', schema='public', type_='unique')
    # ### end Alembic commands ###
